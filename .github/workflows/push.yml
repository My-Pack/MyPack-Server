name: CI(Build) And CD When Push

on:
  push:
    branches: [ "main" ]

permissions:
  checks: write

jobs:
  job-1:
    name: CI(Build)

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'

      # Gradle 설정
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Gradle 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle 캐시 설정
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ci-cd-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ci-cd-${{ runner.os }}-gradle

      # Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # jib를 이용해 이미지를 만들고 원격 저장소에 Push
      - name: Build Image with Gradle and Push to DockerHub
        run: ./gradlew jib
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

  job-2:
    name: CD(Deploy)
    needs: job-1

    runs-on: ubuntu-latest

    steps:
      # ssh로 접속해 재배포
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            cd docker
            docker compose down
            docker compose pull
            docker compose up -d